apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  resource.exclusions: |
    - apiGroups:
      - ''
      - discovery.k8s.io
      kinds:
      - Endpoints
      - EndpointSlice
    - apiGroups:
      - coordination.k8s.io
      kinds:
      - Lease
    - apiGroups:
      - authentication.k8s.io
      - authorization.k8s.io
      kinds:
      - SelfSubjectReview
      - TokenReview
      - LocalSubjectAccessReview
      - SelfSubjectAccessReview
      - SelfSubjectRulesReview
      - SubjectAccessReview
    - apiGroups:
      - certificates.k8s.io
      kinds:
      - CertificateSigningRequest
    - apiGroups:
      - cert-manager.io
      kinds:
      - CertificateRequest
  resource.customizations.ignoreResourceUpdates.all: |
    jsonPointers:
      - /status
  resource.customizations.health.apps_Deployment: |
    hs = {}
    if obj.spec.selector == null then
      hs.statusCode = "Degraded"
      hs.message = "Deployment has no selector"
      return hs
    end
    if obj.status.observedGeneration < obj.metadata.generation then
      hs.statusCode = "Progressing"
      hs.message = "Waiting for rollout to finish: observed generation " .. obj.status.observedGeneration .. " less than desired generation " .. obj.metadata.generation
      return hs
    end
    if obj.status.replicas > obj.status.updatedReplicas then
      hs.statusCode = "Progressing"
      hs.message = "Waiting for rollout to finish: " .. obj.status.replicas .. " total, " .. obj.status.updatedReplicas .. " updated replicas"
      return hs
    end
    if obj.status.replicas > obj.status.availableReplicas then
      hs.statusCode = "Progressing"
      hs.message = "Waiting for rollout to finish: " .. obj.status.replicas .. " total, " .. obj.status.availableReplicas .. " available replicas"
      return hs
    end
    if obj.status.updatedReplicas > obj.status.readyReplicas then
      hs.statusCode = "Progressing"
      hs.message = "Waiting for rollout to finish: " .. obj.status.updatedReplicas .. " updated, " .. obj.status.readyReplicas .. " ready replicas"
      return hs
    end
    hs.statusCode = "Healthy"
    return hs
  resource.customizations.health.core_Service: |
    hs = {}
    if obj.spec.type == "LoadBalancer" then
      if obj.status.loadBalancer == null or obj.status.loadBalancer.ingress == null then
        hs.statusCode = "Progressing"
        hs.message = "Waiting for LoadBalancer external IP"
        return hs
      end
    end
    hs.statusCode = "Healthy"
    return hs
