apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-management-app
  namespace: assignment-5
  labels:
    app: course-management
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: course-management
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: course-management
        tier: application
    spec:
      containers:
      - name: app
        image: assignment_12-web:latest
        imagePullPolicy: Never  # Use local Docker image from Docker Desktop
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        # Environment variables
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:h2:file:/app/data/coursedb"
        - name: SPRING_DATASOURCE_USERNAME
          value: "sa"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "password"
        
        # Volume mounts for persistent data
        volumeMounts:
        - name: course-management-storage
          mountPath: /app/data
        
        # Resource requests and limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Liveness probe - checks if container is alive
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Readiness probe - checks if container is ready to accept traffic
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      # Volumes
      volumes:
      - name: course-management-storage
        persistentVolumeClaim:
          claimName: course-management-data
      
      # Restart policy
      restartPolicy: Always
