apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-management-app
  namespace: assignment-5
  labels:
    app: course-management
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: course-management
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: course-management
        tier: application
    spec:
      containers:
      - name: app
        image: ghcr.io/hsandz/ptuddn/assignment_5:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        # Environment variables
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:h2:file:/app/data/coursedb"
        - name: SPRING_DATASOURCE_USERNAME
          value: "sa"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "password"
        
        # Volume mounts for persistent data
        volumeMounts:
        - name: course-management-storage
          mountPath: /app/data
        
        # Resource requests and limits
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # Startup probe - allows container extra time to start
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30  # 30 * 5 = 150 seconds total startup time
        
        # Liveness probe - checks if container is alive
        # livenessProbe:
        #   tcpSocket:
        #     port: 8080
        #   initialDelaySeconds: 60
        #   periodSeconds: 10
        
        # Readiness probe - checks if container is ready to accept traffic
        # readinessProbe:
        #   tcpSocket:
        #     port: 8080
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
      
      # Volumes
      volumes:
      - name: course-management-storage
        emptyDir: {}
      
      # Restart policy
      restartPolicy: Always
